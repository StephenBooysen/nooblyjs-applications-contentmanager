<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sites - CMS</title>
    <link rel="stylesheet" href="/applications/cms/css/dashboard.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body>
    <div class="dashboard-container">
        <!-- Sidebar -->
        <nav class="sidebar">
            <div class="sidebar-header">
                <h2><i class="fas fa-cube"></i> CMS</h2>
            </div>

            <ul class="sidebar-menu">
                <li>
                    <a href="/applications/cms/dashboard">
                        <i class="fas fa-tachometer-alt"></i>
                        <span>Dashboard</span>
                    </a>
                </li>
                <li class="active">
                    <a href="/applications/cms/sites">
                        <i class="fas fa-globe"></i>
                        <span>Sites</span>
                    </a>
                </li>
                <li>
                    <a href="/applications/cms/pages">
                        <i class="fas fa-file-alt"></i>
                        <span>Pages</span>
                    </a>
                </li>
                <li>
                    <a href="/applications/cms/assets">
                        <i class="fas fa-images"></i>
                        <span>Assets</span>
                    </a>
                </li>
                <li>
                    <a href="/applications/cms/templates">
                        <i class="fas fa-layer-group"></i>
                        <span>Templates</span>
                    </a>
                </li>
                <li>
                    <a href="/applications/cms/themes">
                        <i class="fas fa-palette"></i>
                        <span>Themes</span>
                    </a>
                </li>
                <li>
                    <a href="/applications/cms/analytics">
                        <i class="fas fa-chart-bar"></i>
                        <span>Analytics</span>
                    </a>
                </li>
                <li>
                    <a href="/applications/cms/settings">
                        <i class="fas fa-cog"></i>
                        <span>Settings</span>
                    </a>
                </li>
            </ul>

            <div class="sidebar-footer">
                <div class="user-info">
                    <i class="fas fa-user-circle"></i>
                    <span id="current-user"><%= user.username %></span>
                </div>
                <button class="logout-btn" onclick="logout()">
                    <i class="fas fa-sign-out-alt"></i>
                    Logout
                </button>
            </div>
        </nav>

        <!-- Main Content -->
        <main class="main-content">
            <!-- Header -->
            <header class="content-header">
                <div class="header-left">
                    <h1>Sites</h1>
                    <p>Manage your websites and content</p>
                </div>
                <div class="header-right">
                    <button class="btn btn-primary" onclick="window.location.href='/applications/cms/sites/new'">
                        <i class="fas fa-plus"></i>
                        New Site
                    </button>
                </div>
            </header>

            <!-- Filters -->
            <div class="filters-section">
                <div class="search-box">
                    <input type="text" id="site-search" placeholder="Search sites...">
                    <i class="fas fa-search"></i>
                </div>
                <div class="filter-buttons">
                    <button class="filter-btn active" data-status="all">All Sites</button>
                    <button class="filter-btn" data-status="published">Published</button>
                    <button class="filter-btn" data-status="draft">Drafts</button>
                </div>
            </div>

            <!-- Sites Grid -->
            <div class="sites-grid" id="sites-container">
                <!-- Sites will be loaded dynamically -->
                <div class="loading">Loading sites...</div>
            </div>
        </main>
    </div>

    <script>
        let sites = [];
        let filteredSites = [];
        let currentFilter = 'all';

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            loadSites();
            bindEvents();
        });

        function bindEvents() {
            // Search functionality
            const searchInput = document.getElementById('site-search');
            searchInput.addEventListener('input', (e) => handleSearch(e.target.value));

            // Filter buttons
            const filterButtons = document.querySelectorAll('.filter-btn');
            filterButtons.forEach(btn => {
                btn.addEventListener('click', (e) => {
                    filterButtons.forEach(b => b.classList.remove('active'));
                    e.target.classList.add('active');
                    currentFilter = e.target.dataset.status;
                    filterSites();
                });
            });
        }

        async function loadSites() {
            try {
                const response = await fetch('/applications/cms/api/sites');
                if (response.ok) {
                    sites = await response.json();
                    filteredSites = [...sites];
                    renderSites();
                } else {
                    showError('Failed to load sites');
                }
            } catch (error) {
                console.error('Error loading sites:', error);
                showError('Error loading sites');
            }
        }

        function filterSites() {
            if (currentFilter === 'all') {
                filteredSites = [...sites];
            } else {
                filteredSites = sites.filter(site => site.status === currentFilter);
            }
            renderSites();
        }

        function handleSearch(query) {
            if (!query) {
                filterSites();
                return;
            }

            const searchQuery = query.toLowerCase();
            filteredSites = sites.filter(site =>
                site.name.toLowerCase().includes(searchQuery) ||
                site.settings.title.toLowerCase().includes(searchQuery) ||
                site.settings.description.toLowerCase().includes(searchQuery)
            );
            renderSites();
        }

        function renderSites() {
            const container = document.getElementById('sites-container');

            if (filteredSites.length === 0) {
                container.innerHTML = `
                    <div class="no-sites">
                        <i class="fas fa-globe"></i>
                        <h3>No sites found</h3>
                        <p>Get started by creating your first site</p>
                        <button class="btn btn-primary" onclick="window.location.href='/applications/cms/sites/new'">
                            <i class="fas fa-plus"></i>
                            Create Site
                        </button>
                    </div>
                `;
                return;
            }

            container.innerHTML = filteredSites.map(site => createSiteCard(site)).join('');
        }

        function createSiteCard(site) {
            const lastUpdated = formatRelativeTime(site.updatedAt);

            return `
                <div class="site-card" data-site-id="${site.id}">
                    <div class="site-header">
                        <h3>${escapeHtml(site.name)}</h3>
                        <span class="site-status status-${site.status}">${site.status}</span>
                    </div>
                    <div class="site-content">
                        <p class="site-description">${escapeHtml(site.settings.description || 'No description')}</p>
                        <div class="site-meta">
                            <span class="site-theme"><i class="fas fa-palette"></i> ${site.theme}</span>
                            <span class="site-updated">Updated ${lastUpdated}</span>
                        </div>
                    </div>
                    <div class="site-actions">
                        <button class="btn btn-sm" onclick="editSite('${site.id}')">
                            <i class="fas fa-edit"></i> Edit
                        </button>
                        <button class="btn btn-sm" onclick="builderSite('${site.id}')">
                            <i class="fas fa-hammer"></i> Builder
                        </button>
                        ${site.status === 'published' ?
                            `<button class="btn btn-sm btn-outline" onclick="viewSite('${site.id}')">
                                <i class="fas fa-external-link-alt"></i> View
                            </button>` :
                            `<button class="btn btn-sm btn-outline" onclick="publishSite('${site.id}')">
                                <i class="fas fa-rocket"></i> Publish
                            </button>`
                        }
                        <button class="btn btn-sm btn-danger" onclick="deleteSite('${site.id}')">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                </div>
            `;
        }

        function editSite(siteId) {
            window.location.href = `/applications/cms/sites/${siteId}/edit`;
        }

        function builderSite(siteId) {
            window.location.href = `/applications/cms/sites/${siteId}/builder`;
        }

        function viewSite(siteId) {
            const site = sites.find(s => s.id === siteId);
            if (site && site.url) {
                window.open(site.url, '_blank');
            }
        }

        async function publishSite(siteId) {
            try {
                showNotification('Publishing site...', 'info');

                const response = await fetch(`/applications/cms/api/sites/${siteId}/publish`, {
                    method: 'POST'
                });

                if (response.ok) {
                    showNotification('Site published successfully!', 'success');
                    await loadSites(); // Refresh sites
                } else {
                    const error = await response.json();
                    showNotification(error.error || 'Failed to publish site', 'error');
                }
            } catch (error) {
                console.error('Error publishing site:', error);
                showNotification('Failed to publish site', 'error');
            }
        }

        async function deleteSite(siteId) {
            const site = sites.find(s => s.id === siteId);
            if (!confirm(`Are you sure you want to delete "${site.name}"? This action cannot be undone.`)) {
                return;
            }

            try {
                const response = await fetch(`/applications/cms/api/sites/${siteId}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    showNotification('Site deleted successfully', 'success');
                    await loadSites(); // Refresh sites
                } else {
                    const error = await response.json();
                    showNotification(error.error || 'Failed to delete site', 'error');
                }
            } catch (error) {
                console.error('Error deleting site:', error);
                showNotification('Failed to delete site', 'error');
            }
        }

        // Utility functions
        function formatRelativeTime(timestamp) {
            const now = new Date();
            const time = new Date(timestamp);
            const diffInSeconds = Math.floor((now - time) / 1000);

            if (diffInSeconds < 60) return 'just now';
            if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}m ago`;
            if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)}h ago`;
            if (diffInSeconds < 2592000) return `${Math.floor(diffInSeconds / 86400)}d ago`;

            return time.toLocaleDateString();
        }

        function escapeHtml(text) {
            const div = document.createElement('div');
            div.textContent = text;
            return div.innerHTML;
        }

        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.className = `notification notification-${type}`;
            notification.textContent = message;
            document.body.appendChild(notification);

            setTimeout(() => {
                notification.remove();
            }, 5000);
        }

        function showError(message) {
            document.getElementById('sites-container').innerHTML = `
                <div class="error-state">
                    <i class="fas fa-exclamation-triangle"></i>
                    <h3>Error</h3>
                    <p>${message}</p>
                    <button class="btn btn-primary" onclick="loadSites()">Retry</button>
                </div>
            `;
        }

        async function logout() {
            try {
                const response = await fetch('/applications/cms/api/auth/logout', {
                    method: 'POST'
                });

                if (response.ok) {
                    window.location.href = '/applications/cms/login';
                }
            } catch (error) {
                console.error('Logout failed:', error);
            }
        }
    </script>

    <style>
        .filters-section {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            gap: 1rem;
        }

        .search-box {
            position: relative;
            flex: 1;
            max-width: 400px;
        }

        .search-box input {
            width: 100%;
            padding: 0.75rem 1rem 0.75rem 2.5rem;
            border: 1px solid #e2e8f0;
            border-radius: 0.5rem;
            font-size: 0.875rem;
        }

        .search-box i {
            position: absolute;
            left: 0.75rem;
            top: 50%;
            transform: translateY(-50%);
            color: #64748b;
        }

        .filter-buttons {
            display: flex;
            gap: 0.5rem;
        }

        .filter-btn {
            padding: 0.5rem 1rem;
            border: 1px solid #e2e8f0;
            background: white;
            border-radius: 0.375rem;
            font-size: 0.875rem;
            cursor: pointer;
            transition: all 0.2s;
        }

        .filter-btn.active {
            background: #3b82f6;
            color: white;
            border-color: #3b82f6;
        }

        .sites-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: 1.5rem;
        }

        .site-card {
            background: white;
            border: 1px solid #e2e8f0;
            border-radius: 0.75rem;
            padding: 1.5rem;
            box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
            transition: all 0.2s;
        }

        .site-card:hover {
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }

        .site-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 1rem;
        }

        .site-header h3 {
            font-size: 1.125rem;
            font-weight: 600;
            color: #1e293b;
            margin: 0;
        }

        .site-description {
            color: #64748b;
            font-size: 0.875rem;
            margin-bottom: 1rem;
            line-height: 1.5;
        }

        .site-meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
            font-size: 0.75rem;
            color: #64748b;
        }

        .site-theme i {
            margin-right: 0.25rem;
        }

        .site-actions {
            display: flex;
            gap: 0.5rem;
            flex-wrap: wrap;
        }

        .btn-danger {
            background: #ef4444;
            color: white;
        }

        .btn-danger:hover {
            background: #dc2626;
        }

        .no-sites, .error-state {
            grid-column: 1 / -1;
            text-align: center;
            padding: 3rem 1rem;
            color: #64748b;
        }

        .no-sites i, .error-state i {
            font-size: 3rem;
            margin-bottom: 1rem;
            color: #cbd5e1;
        }

        .no-sites h3, .error-state h3 {
            font-size: 1.5rem;
            color: #374151;
            margin-bottom: 0.5rem;
        }

        @media (max-width: 768px) {
            .filters-section {
                flex-direction: column;
                align-items: stretch;
            }

            .sites-grid {
                grid-template-columns: 1fr;
            }

            .site-actions {
                justify-content: center;
            }
        }
    </style>
</body>
</html>